<?php//MIPCMS.Com [Don't forget the beginner's mind]//Copyright (c) 2017~2099 http://www.ssycms.com All rights reserved.namespace app\common\model;use think\Cache;use mip\Init;class Common{    public function getContentFilterByContent($content)    {        $itemInfo['content'] = $content;         $itemInfo['content'] =  preg_replace("/style=.+?['|\"]/i",'', $itemInfo['content']);               preg_match_all('/<img.*?src=[\'|\"](.*?)[\'|\"].*?[\/]?>/', $itemInfo['content'], $imagesArray);          $patern = '/^^((https|http|ftp)?:?\/\/)[^\s]+$/';        foreach($imagesArray[0] as $key => $val) {            @preg_match("/alt=[\'|\"](.*?)[\'|\"]/",$val,$tempAlt);            if ($tempAlt) {                $alt = $tempAlt[1];            }            @preg_match("/width=[\'|\"](.*?)[\'|\"]/",$val,$tempWidth);            @preg_match("/height=[\'|\"](.*?)[\'|\"]/",$val,$tempHeight);            $src = $imagesArray[1][$key];            if (@preg_match($patern,$src)) {                         } else {                if (strpos($src,';base64,') === false) {                    $src = config('domainStatic') . $src;                }            }            if ($tempWidth && $tempHeight) {                if ($tempWidth[1] > 500) {                    $layout = '';                    $tempImg = '<mip-img '.$layout.' alt="'.$alt.'" src="'.$src.'" popup></mip-img>';                } else {                    $layout = 'layout="fixed"';                    $tempImg = '<mip-img ' .$layout. ' ' . $tempWidth[0] . ' ' . $tempHeight[0] .' alt="'.$alt.'" src="'.$src.'" popup></mip-img>';                }            } else {                $layout = '';                $tempImg = '<mip-img '.$layout.' alt="'.$alt.'" src="'.$src.'" popup></mip-img>';            }            $itemInfo['content'] =  str_replace($val,$tempImg,$itemInfo['content']);        }        @preg_match_all('/<a[^>]*>[^>]+a>/',$itemInfo['content'],$tempLink);        foreach($tempLink[0] as $k => $v) {            if(strpos($v,"href")) {            } else {                $itemInfo['content'] = str_replace($v,'',$itemInfo['content']);            }        }        return $itemInfo['content'];    }        public function insertTagsByContent($title,$content)    {        $tempContent = deleteHtml($content);        $post_data = array (            "title" => deleteHtml($title),            "content" => $tempContent,            "key" => '',            "domain" => config('domain'),        );        $ch = curl_init();        curl_setopt($ch, CURLOPT_URL, 'http://api.mipclouds.com/api/ApiUserTool/keyword');        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);        curl_setopt($ch, CURLOPT_POST, 1);        curl_setopt($ch, CURLOPT_POSTFIELDS, $post_data);        $result = curl_exec($ch);        curl_close($ch);                    if ($result) {            $result = json_decode($result,true);            if ($result['code'] == 1) {                $resultList = $result['data']['items'];                if ($resultList) {                    foreach ($resultList as $ke => $va) {                        if ($va['tag']) {                            $tagsList[] = $va['tag'];                        }                    }                    $tagsList = array_unique($tagsList);                                        if ($tagsList) {                        $itemInfo = db('articles')->where('uuid',$tempId)->find();                        $itemId = $itemInfo['uuid'];                        $itemUid = $itemInfo['uid'];                        $publish_time = $itemInfo['publish_time'] ? $itemInfo['publish_time'] : time();                        $tags = $tagsList;                        if (is_array($tags)) {                            db('itemTags')->where('item_id',$itemId)->delete();                            foreach ($tags as $name) {                                if ($name) {                                    $tagInfo = db('Tags')->where('name',$name)->find();                                    if (!$tagInfo) {                                        $result =  getPinyin($name);                                        if ($result) {                                            if (!db('Tags')->where('url_name',$result)->find()) {                                                db('Tags')->insert(array(                                                    'id' => uuid(),                                                    'name' => $name,                                                    'url_name' => $result,                                                ));                                            } else {                                                 db('Tags')->insert(array(                                                    'id' => uuid(),                                                    'name' => $name,                                                ));                                            }                                        }                                                                                $tagInfo = db('Tags')->where('name',$name)->find();                                    }                                    db('itemTags')->insert(array(                                        'id' => uuid(),                                        'tags_id'=>$tagInfo['id'],                                        'item_id' => $itemId,                                        'item_add_time' => $publish_time,                                    ));                                    $tagsCount = db('itemTags')->where('tags_id',$tagInfo['id'])->count();                                    if ($tagsCount) {                                        db('Tags')->where('id',$tagInfo['id'])->update(array(                                            'relevance_num' => $tagsCount,                                            'creator_uid' => $itemUid,                                            'add_time' => time(),                                        ));                                    }                                }                            }                        }                    }                                    }            }        }        return true;    }    }